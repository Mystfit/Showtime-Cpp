language: cpp

branches:
  only:
  - master
  - develop
  - travis

cache:
  directories:
  - apt
  - /home/linuxbrew/.linuxbrew

sudo: required 

env:
  global:
  - BUILD_FOLDER=$TRAVIS_BUILD_DIR
  - GENERATOR="Unix Makefiles"
  - USE_LOCAL_BOOST=1
  - CMAKE_PATH=$TRAVIS_BUILD_DIR/cmake

# Use Linux unless specified otherwise


matrix:
  include:
    # # Clang 5.0
    # - env: COMPILER=clang++-5.0 COMPILER_C=clang-5.0 BUILD_TYPE=Debug
    #   addons: &clang50
    #     apt:
    #       packages:
    #         - clang-5.0
    #         - g++-5
    #       sources:
    #         - ubuntu-toolchain-r-test
    #         - llvm-toolchain-trusty-5.0
    #         - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main'
    #           key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

    # - env: COMPILER=clang++-5.0 COMPILER_C=clang-5.0 BUILD_TYPE=Release
    #   addons: *clang50

    # GCC 6
    - env: BUILD_TYPE=Debug HOMEBREW_PATH=/home/linuxbrew/.linuxbrew
      os: linux
      dist: trusty
      addons: &common_build
        apt:
          packages: 
            - build-essential
            - gawk
            - curl 
            - file
            - git
            - python-setuptools
            - locales 
          sources:
            - ubuntu-toolchain-r-test

    - env: BUILD_TYPE=Release HOMEBREW_PATH=/home/linuxbrew/.linuxbrew
      os: linux
      dist: trusty
      addons: *common_build

    # XCode 9.1
    - env: COMPILER=clang++ COMPILER_C=clang BUILD_TYPE=Debug HOMEBREW_PATH=/usr/local
      os: osx
      osx_image: xcode9.2
      compiler: clang

    - env: COMPILER=clang++ COMPILER_C=clang BUILD_TYPE=Release HOMEBREW_PATH=/usr/local
      os: osx
      osx_image: xcode9.2
      compiler: clang

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo echo "LC_ALL=en_US.UTF-8" >> /etc/environment;
      sudo echo "LC_ALL=en_US.UTF-8" >> /etc/environment;
      sudo echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen;
      sudo echo "LANG=en_US.UTF-8" > /etc/locale.conf;
      sudo locale-gen en_US.UTF-8;
      export CMAKE_PATH=$HOMEBREW_PATH/bin;
    fi

    # Linux CMake 3.11 (if required)
    # wget https://cmake.org/files/v3.11/cmake-3.11.0-rc2-Linux-x86_64.sh --quiet;
    # sudo bash cmake-3.11.0-rc2-Linux-x86_64.sh --skip-license --prefix=$CMAKE_PATH;
    # export CMAKE_PATH=$HOMEBREW_PATH/bin;

  # Use local boost - get and install latest CMake on OSX
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      export USE_LOCAL_BOOST=1;
      mkdir $CMAKE_PATH;
      wget https://cmake.org/files/v3.11/cmake-3.11.0-rc2-Darwin-x86_64.tar.gz --quiet;
      tar -xf cmake-3.11.0-rc2-Darwin-x86_64.tar.gz -C $CMAKE_PATH --strip-components=1;
      export CMAKE_PATH=$CMAKE_PATH/CMake.app/Contents/bin;
    fi

  # CMake paths
  - export CMAKE_BIN=$CMAKE_PATH/cmake;
  - export CTEST_BIN=$CMAKE_PATH/ctest;

install:
  #- if [ "$TRAVIS_OS_NAME" == "linux" ]; then travis_wait 30 $BUILD_FOLDER/.travis/install_boost.sh; fi
  # Output something every 10 minutes or Travis kills the job
  - while sleep 9m; do echo "=====[ $SECONDS seconds still running ]====="; done &
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then 
      bash $BUILD_FOLDER/.travis/install_linuxbrew_dependencies.sh;
    fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then bash $BUILD_FOLDER/.travis/install_homebrew_dependencies.sh; fi
  # Killing background sleep loop
  - kill %1

script:
  - mkdir build
  - PREFIX_ARGS="$HOMEBREW_PATH
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      export CXX=$HOMEBREW_PATH/bin/g++;
      export CC=$HOMEBREW_PATH/bin/gcc;
      PREFIX_ARGS="$HOMEBREW_PATH/opt/boost@1.60;$PREFIX_ARGS"
    fi
  - GENERATOR_ARGS="-DUSE_HUNTER=OFF";
  - GENERATOR_ARGS="$GENERATOR_ARGS -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON";
  # - GENERATOR_ARGS="$GENERATOR_ARGS -DCMAKE_LINKER=/home/linuxbrew/.linuxbrew/bin/ld"
  # - GENERATOR_ARGS="$GENERATOR_ARGS -DCMAKE_CXX_LINK_EXECUTABLE="<CMAKE_LINKER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>"
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      GENERATOR_ARGS="$GENERATOR_ARGS -DCMAKE_TOOLCHAIN_FILE=$BUILD_FOLDER/.travis/travis_linux_toolchain.cmake";
    fi
  - if [ $USE_LOCAL_BOOST ]; then GENERATOR_ARGS="$GENERATOR_ARGS -DUSE_LOCAL_BOOST=ON"; fi
  - GENERATOR_ARGS="$GENERATOR_ARGS -DCMAKE_PREFIX_PATH=$PREFIX_ARGS;${CMAKE_PREFIX_PATH}"
  - $CMAKE_BIN -H$BUILD_FOLDER -B$BUILD_FOLDER/build -G "$GENERATOR" $GENERATOR_ARGS
  - $CMAKE_BIN --build $BUILD_FOLDER/build --config $CONFIG 

  # Run tests
  - pushd "$BUILD_FOLDER/build"
  - $CTEST_BIN -C Debug -V --output-on-fail --timeout 120
