set(BUILD_STAMP "${CMAKE_CURRENT_BINARY_DIR}/build/timestamp")

set(CSHARP_INTERFACES
    showtime.i
)

set(SHOWTIME_DOTNET_TARGET showtime_dotnet)

SET_SOURCE_FILES_PROPERTIES(${CSHARP_INTERFACES} PROPERTIES CPLUSPLUS ON)

include (${SWIG_USE_FILE})
set(CMAKE_SWIG_OUTDIR ${CMAKE_CURRENT_BINARY_DIR})

SWIG_ADD_LIBRARY(${SHOWTIME_DOTNET_TARGET} LANGUAGE csharp TYPE SHARED SOURCES ${CSHARP_INTERFACES} ${ZST_HEADERS})

add_dependencies(${SWIG_MODULE_${SHOWTIME_DOTNET_TARGET}_REAL_NAME} ${PROJECT_NAME})

SWIG_LINK_LIBRARIES(${SHOWTIME_DOTNET_TARGET} 
	${PROJECT_NAME}
	${ZeroMQ_LIBRARIES} 
	${PYTHON_LIBRARIES}
	${CZMQ_LIBRARIES}
	${MSGPACK_LIBRARIES}
)

option(BINDINGS_UNITY "Build Unity project" OFF)

if(BINDINGS_UNITY)

	set(UNITY_EXECUTABLE $ENV{PROGRAMFILES}/Unity/Editor/Unity.exe CACHE FILEPATH "Path to Unity executable")
	set(UNITY_PROJECT ${CMAKE_CURRENT_BINARY_DIR}/Showtime-Unity)

	# Copy dotnet bindings
	file(GLOB DOTNET_BINDINGS "${CMAKE_CURRENT_BINARY_DIR}/*.cs")
	file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/unity/Showtime-Unity DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

	# Set Unity project paths
	SET(DOTNET_LIB_OUTPUT $<TARGET_FILE:${SWIG_MODULE_${SHOWTIME_DOTNET_TARGET}_REAL_NAME}>)
	SET(UNITY_BIN_DIR ${UNITY_PROJECT}/Assets/Showtime/Plugins/x64-win)
	SET(UNITY_BINDINGS_DIR ${UNITY_PROJECT}/Assets/Showtime/Plugins/bindings)
	set(UNITY_BINARY_FILES $<TARGET_FILE:${PROJECT_NAME}> $<TARGET_FILE:${SHOWTIME_STAGE_NAME}> ${DOTNET_LIB_OUTPUT} ${RUNTIMES_LIBZMQ} ${RUNTIMES_CZMQ})

	add_custom_command(
		OUTPUT ${BUILD_STAMP} 
	   	COMMAND ${CMAKE_COMMAND} -E copy ${DOTNET_BINDINGS} ${UNITY_BINDINGS_DIR}
		COMMAND ${CMAKE_COMMAND} -E copy ${UNITY_BINARY_FILES} ${UNITY_BIN_DIR}
		COMMAND ${UNITY_EXECUTABLE} -batchmode -quit -projectPath ${UNITY_PROJECT} -exportPackage Assets/${PROJECT_NAME} ${PROJECT_NAME}.unitypackage
		DEPENDS ${SHOWTIME_DOTNET_TARGET} ${SHOWTIME_STAGE_NAME}
	)
	add_custom_target(BUILD_UNITY_PACKAGE ALL DEPENDS ${BUILD_STAMP})

endif()
