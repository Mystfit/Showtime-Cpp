//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


class showtime_dotnetPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="SWIGRegisterExceptionCallbacks_showtime_dotnet")]
    public static extern void SWIGRegisterExceptionCallbacks_showtime_dotnet(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_showtime_dotnet")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_showtime_dotnet(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_showtime_dotnet(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_showtime_dotnet(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(showtime_dotnetPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(showtime_dotnetPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="SWIGRegisterStringCallback_showtime_dotnet")]
    public static extern void SWIGRegisterStringCallback_showtime_dotnet(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_showtime_dotnet(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static showtime_dotnetPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstURI_create")]
  public static extern global::System.IntPtr ZstURI_create(string jarg1, string jarg2, string jarg3, int jarg4);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstURI_destroy")]
  public static extern void ZstURI_destroy(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstURI_performer")]
  public static extern string ZstURI_performer(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstURI_instrument")]
  public static extern string ZstURI_instrument(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstURI_name")]
  public static extern string ZstURI_name(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstURI_direction")]
  public static extern int ZstURI_direction(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstURI_to_char")]
  public static extern string ZstURI_to_char(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstURI_from_str")]
  public static extern global::System.IntPtr ZstURI_from_str(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_delete_ZstURI")]
  public static extern void delete_ZstURI(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_delete_ZstPlug")]
  public static extern void delete_ZstPlug(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstPlug_get_URI")]
  public static extern global::System.IntPtr ZstPlug_get_URI(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstPlug_attach_recv_callback")]
  public static extern void ZstPlug_attach_recv_callback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstPlug_destroy_recv_callback")]
  public static extern void ZstPlug_destroy_recv_callback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstPlug_fire")]
  public static extern void ZstPlug_fire(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstPlug_recv")]
  public static extern void ZstPlug_recv(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_new_PlugCallback")]
  public static extern global::System.IntPtr new_PlugCallback();

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_delete_PlugCallback")]
  public static extern void delete_PlugCallback(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_PlugCallback_run")]
  public static extern void PlugCallback_run(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_PlugCallback_runSwigExplicitPlugCallback")]
  public static extern void PlugCallback_runSwigExplicitPlugCallback(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_PlugCallback_director_connect")]
  public static extern void PlugCallback_director_connect(global::System.Runtime.InteropServices.HandleRef jarg1, PlugCallback.SwigDelegatePlugCallback_0 delegate0);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_new_PlugEvent__SWIG_0")]
  public static extern global::System.IntPtr new_PlugEvent__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_new_PlugEvent__SWIG_1")]
  public static extern global::System.IntPtr new_PlugEvent__SWIG_1(int jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_delete_PlugEvent")]
  public static extern void delete_PlugEvent(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_PlugEvent_event_")]
  public static extern int PlugEvent_event_(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_PlugEvent_plug")]
  public static extern global::System.IntPtr PlugEvent_plug(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_new_ZstIntPlug")]
  public static extern global::System.IntPtr new_ZstIntPlug(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstIntPlug_fire")]
  public static extern void ZstIntPlug_fire(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstIntPlug_recv")]
  public static extern void ZstIntPlug_recv(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstIntPlug_get_value")]
  public static extern int ZstIntPlug_get_value(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_delete_ZstIntPlug")]
  public static extern void delete_ZstIntPlug(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_convert_to_int_plug")]
  public static extern global::System.IntPtr convert_to_int_plug(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_delete_Showtime")]
  public static extern void delete_Showtime(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_endpoint")]
  public static extern global::System.IntPtr Showtime_endpoint();

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_destroy")]
  public static extern void Showtime_destroy();

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_set_runtime_language")]
  public static extern void Showtime_set_runtime_language(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_get_runtime_language")]
  public static extern int Showtime_get_runtime_language();

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_join")]
  public static extern void Showtime_join(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_ping_stage")]
  public static extern global::System.IntPtr Showtime_ping_stage();

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_create_performer")]
  public static extern global::System.IntPtr Showtime_create_performer(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_get_performer_by_name")]
  public static extern global::System.IntPtr Showtime_get_performer_by_name(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_pop_plug_event")]
  public static extern global::System.IntPtr Showtime_pop_plug_event();

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_plug_event_queue_size")]
  public static extern int Showtime_plug_event_queue_size();

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_create_int_plug")]
  public static extern global::System.IntPtr Showtime_create_int_plug(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_destroy_plug")]
  public static extern void Showtime_destroy_plug(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_get_all_plug_addresses__SWIG_0")]
  public static extern global::System.IntPtr Showtime_get_all_plug_addresses__SWIG_0(string jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_get_all_plug_addresses__SWIG_1")]
  public static extern global::System.IntPtr Showtime_get_all_plug_addresses__SWIG_1(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_get_all_plug_addresses__SWIG_2")]
  public static extern global::System.IntPtr Showtime_get_all_plug_addresses__SWIG_2();

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_Showtime_connect_plugs")]
  public static extern void Showtime_connect_plugs(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("showtime_dotnet", EntryPoint="CSharp_ZstIntPlug_SWIGUpcast")]
  public static extern global::System.IntPtr ZstIntPlug_SWIGUpcast(global::System.IntPtr jarg1);
}
