# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  guest_source_path = "C:\\vagrant-showtime-src"
  guest_bin_path = "C:\\vagrant-showtime-bin"
  guest_lib_path = "C:\\vagrant-showtime-lib"
  guest_vagrant_path = "C:\\vagrant-showtime-src\\containers\\windows"
  guest_build_path = "${WINDOWS_CONTAINER_INTERNAL_BUILD_DIR}"

  config.vm.box = "mystfit/Windows-10-x64-ssh"
  config.vm.box_version = "0.0.1"
  config.vm.synced_folder "${CMAKE_SOURCE_DIR}", guest_source_path
  config.vm.synced_folder "${NATIVE_BINARY_PATH}", guest_bin_path
  config.vm.synced_folder "${NATIVE_LIBRARY_PATH}", guest_lib_path
  config.vm.define "${WINDOWS_CONTAINER_NAME}"
  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.cpus = ${CONTAINER_CPU_COUNT}
    vb.memory = "${CONTAINER_MEMORY_AMOUNT}"
  end

  env_vars = {
    "SOURCE_DIR" => guest_source_path,
    "BUILD_FOLDER" => guest_build_path,
    "VAGRANT_DIR" => guest_vagrant_path
  }
  
  config.vm.provision :shell, env: env_vars, powershell_elevated_interactive: true, inline: <<-SHELL
    # Install chocolatey
    Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
  SHELL

  config.vm.provision :shell, env: env_vars, powershell_elevated_interactive: true, inline: <<-SHELL
    # Install boxstarter
    choco install -y BoxStarter
  SHELL

  config.vm.provision :shell, env: env_vars, powershell_elevated_interactive: true, inline: <<-SHELL
    # Install packages with boxstarter
    Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force -Confirm:$false
    Install-BoxStarterPackage -PackageName $Env:VAGRANT_DIR\\BoxStarterGist.txt -DisableReboots > $null
  SHELL

  config.vm.provision :shell, env: env_vars, path: "${CMAKE_SOURCE_DIR}/containers/windows/build_showtime_deps.ps1"

  # Build windows libs
  config.vm.provision :shell, env: env_vars, run: 'always', path: "${CMAKE_SOURCE_DIR}/containers/windows/build_showtime.ps1"
end

